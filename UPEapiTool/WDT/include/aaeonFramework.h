#pragma once

#define AAEON_DEVICE L"\\\\.\\Aaeon_WdfLink"
#define MAX_BLOCK_LENGTH 0x100
#define MAX_SPI_LENGTH 2048

//
// The device context performs the same job as
// a WDM device extension in the driver frameworks
//
typedef struct _AAEON_DEVICE_CONTEXT
{
	ULONG inputBuffer;  // just a placeholder
	ULONG outputBuffer;  // just a placeholder

} AAEON_DEVICE_CONTEXT, * PAAEON_DEVICE_CONTEXT;

typedef struct _AAEON_BOARD_INFO
{
	WCHAR sManufacture[32];
	WCHAR sBoardName[32];
	WCHAR sBoardID[32];
	WCHAR sBIOSVersion[32];
	ULONG dwDriverVersion;
	WCHAR sFunction;
	ULONG dwFirmwareVersion;
} AAEON_BOARD_INFO, * PAAEON_BOARD_INFO;

typedef struct _AAEON_HWMON
{
	CHAR bTemperature;

} AAEON_HWMON, * PAAEON_HWMON;

typedef struct _AAEON_I2C
{
	UCHAR bDeviceNumber;
	UCHAR bSlaveAddr;
	USHORT wRegister;
	UCHAR bRegLength;
	ULONG dwData;
	UCHAR bDataBuf[MAX_BLOCK_LENGTH];
	UCHAR bDataLength;

} AAEON_I2C, * PAAEON_I2C;

typedef struct _AAEON_GPIO
{
	int bPinCount;
	UCHAR bGroupSelect;
	UCHAR bPinSelect;
	ULONG dwDirection;
	ULONG dwData;
	UCHAR bGpioCanBeOutput;
	UCHAR bGpioCanBeInput;
	UCHAR bGpioDisable;

} AAEON_GPIO, * PAAEON_GPIO;

typedef struct _AAEON_GPIO_Interrupt
{
	UCHAR PinNum;
	BOOLEAN Enable_Int;			//1:Enable	0:Disable
	BOOLEAN Get_Int_Enable;		//1:Enable	0:Disable
	BOOLEAN Int_Status;			//1:Detect Int Event	0:No Int
	BOOLEAN NewState;			
	ULONGLONG EventTime;
} AAEON_GPIO_Interrupt, * PAAEON_GPIO_Interrupt;

typedef struct _AAEON_PWM_CONTROL
{
	UCHAR bDeviceNumber;
	UCHAR bPWMBaseUnitInt;
	USHORT bPWMBaseUnitFrac;
	UCHAR bPWMDutyCycle;
} AAEON_PWM_CONTROL, * PAAEON_PWM_CONTROL;

typedef enum IO_SPI_MODE
{
	IO_SPI_MODE_0 = 0,
	IO_SPI_MODE_1 = 1,
	IO_SPI_MODE_2 = 2,
	IO_SPI_MODE_3 = 3,
	IO_SPI_MODE_MAX
} IO_SPI_MODE, *PIO_SPI_MODE;

typedef struct _SPI_TRANSFER_BUFFER
{
	UCHAR	DevNum;
	UCHAR   SlaveSelect;
	UCHAR	DataBitLength;
	UINT32  ConnectionSpeed;
	UINT32  Mode;
	UINT32	Reserved;
	
	UINT32	rLen;
	ULONG	rBuf[MAX_SPI_LENGTH];
	UINT32  wLen;
	ULONG   wBuf[MAX_SPI_LENGTH];
} SPI_TRANSFER_BUFFER, *PSPI_TRANSFER_BUFFER;

typedef struct _AAEON_CPLD_CONTROL
{
	UCHAR ReadWrite;
	UCHAR Address;
	ULONGLONG RegData;
	ULONGLONG DataOut;

} AAEON_CPLD_CONTROL, * PAAEON_CPLD_CONTROL;

typedef struct _AAEON_ADC_CONTROL
{
	ULONG Channel;
	ULONG DataOut;
} AAEON_ADC_CONTROL, * PAAEON_ADC_CONTROL;

typedef struct _AAEON_PWM_INFO
{
	ULONG clk_rate;
	ULONG maxFrequency;
	ULONG minFrequency;
	ULONG pinCount;
	ULONG fracbit;
} AAEON_PWM_INFO, * PAAEON_PWM_INFO;

typedef struct _AAEON_ADC_INFO
{
	UCHAR channelCount;
	ULONG maxValue;
	ULONG minValue;
	ULONG resolutionInBits;
} AAEON_ADC_INFO, * PAAEON_ADC_INFO;

typedef struct _AAEON_WATCHDOG
{
	ULONG timeout;
	BOOLEAN enabled;
} AAEON_WATCHDOG, * PAAEON_WATCHDOG;
/*--------------------------------------------------------------------IO_CTL_CODE-*/

// Values of less than 0x8000 are reserved for Microsoft.
// Values of 0x8000 and higher can be used by vendors.
#define FILE_DEVICE_AAEON 0x00008010
// Values of less than 0x800 are reserved for Microsoft.
// Values of 0x800 and higher can be used by vendors.
#define AAEON_FUNC_BASE 0x801

// AAEON EAPI Initialization Function
#define AAEON_FUNC_INIT				AAEON_FUNC_BASE
// AAEON EAPI Information Function
#define AAEON_FUNC_INFORMATION		AAEON_FUNC_BASE + 0x10
// AAEON EAPI I2C Function
#define AAEON_FUNC_I2C				AAEON_FUNC_BASE + 0x40
// AAEON EAPI GPIO Function
#define AAEON_FUNC_GPIO				AAEON_FUNC_BASE + 0x60
// AAEON EAPI PWM Function
#define AAEON_FUNC_PWM				AAEON_FUNC_BASE + 0x90
// AAEON EAPI SPI Function
#define AAEON_FUNC_SPI				AAEON_FUNC_BASE + 0x110
// AAEON EAPI CPLD Function
#define AAEON_FUNC_CPLD				AAEON_FUNC_BASE + 0x130
// AAEON EAPI ADC Function
#define AAEON_FUNC_ADC				AAEON_FUNC_BASE + 0x150
// AAEON EAPI ADC Function
#define AAEON_FUNC_WDT				AAEON_FUNC_BASE + 0x160

/*---------------------------------------------AAEON EAPI Initialization Function-*/
#define IOCTL_AAEON_TEST	CTL_CODE\
		(FILE_DEVICE_AAEON, AAEON_FUNC_INIT + 0x00, METHOD_BUFFERED, FILE_ANY_ACCESS)

/*------------------------------------------------AAEON EAPI Information Function-*/
#define IOCTL_AAEON_BOARD_GET_INFO	CTL_CODE\
		(FILE_DEVICE_AAEON, AAEON_FUNC_INFORMATION + 0x00, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_AAEON_HWMON_GET_VALUE	CTL_CODE\
		(FILE_DEVICE_AAEON, AAEON_FUNC_INFORMATION + 0x01, METHOD_BUFFERED, FILE_ANY_ACCESS)


/*--------------------------------------------------------AAEON EAPI I2C Function-*/
#define IOCTL_AAEON_I2C_READRAW		CTL_CODE\
		(FILE_DEVICE_AAEON, AAEON_FUNC_I2C + 0x00, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_AAEON_I2C_WRITERAW	CTL_CODE\
		(FILE_DEVICE_AAEON, AAEON_FUNC_I2C + 0x01, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_AAEON_I2C_COMBINEREAD	CTL_CODE\
		(FILE_DEVICE_AAEON, AAEON_FUNC_I2C + 0x02, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_AAEON_I2C_SETSPEED	CTL_CODE\
		(FILE_DEVICE_AAEON, AAEON_FUNC_I2C + 0x03, METHOD_BUFFERED, FILE_ANY_ACCESS)
/*-------------------------------------------------------AAEON EAPI GPIO Function-*/
#define IOCTL_AAEON_GPIO_GET_GPIOCOUNT	CTL_CODE\
		(FILE_DEVICE_AAEON, AAEON_FUNC_GPIO + 0x00, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_AAEON_GPIO_GET_BASEADDRESS	CTL_CODE\
		(FILE_DEVICE_AAEON, AAEON_FUNC_GPIO + 0x01, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_AAEON_GPIO_GET_DIRECTION	CTL_CODE\
		(FILE_DEVICE_AAEON, AAEON_FUNC_GPIO + 0x02, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_AAEON_GPIO_SET_DIRECTION	CTL_CODE\
		(FILE_DEVICE_AAEON, AAEON_FUNC_GPIO + 0x03, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_AAEON_GPIO_GET_DATA	CTL_CODE\
		(FILE_DEVICE_AAEON, AAEON_FUNC_GPIO + 0x04, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_AAEON_GPIO_SET_DATA	CTL_CODE\
		(FILE_DEVICE_AAEON, AAEON_FUNC_GPIO + 0x05, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_AAEON_GPIO_PIN_GET_DIRECTION	CTL_CODE\
		(FILE_DEVICE_AAEON, AAEON_FUNC_GPIO + 0x06, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_AAEON_GPIO_PIN_SET_DIRECTION	CTL_CODE\
		(FILE_DEVICE_AAEON, AAEON_FUNC_GPIO + 0x07, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_AAEON_GPIO_PIN_GET_DATA	CTL_CODE\
		(FILE_DEVICE_AAEON, AAEON_FUNC_GPIO + 0x08, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_AAEON_GPIO_PIN_SET_DATA	CTL_CODE\
		(FILE_DEVICE_AAEON, AAEON_FUNC_GPIO + 0x09, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_AAEON_GPIO_CAPABILITY	CTL_CODE\
		(FILE_DEVICE_AAEON, AAEON_FUNC_GPIO + 0x0A, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_AAEON_GPIO_SET_INT	CTL_CODE\
		(FILE_DEVICE_AAEON, AAEON_FUNC_GPIO + 0x0B, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_AAEON_GPIO_GET_INT	CTL_CODE\
		(FILE_DEVICE_AAEON, AAEON_FUNC_GPIO + 0x0C, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_AAEON_GPIO_GET_INT_STATUS	CTL_CODE\
		(FILE_DEVICE_AAEON, AAEON_FUNC_GPIO + 0x0D, METHOD_BUFFERED, FILE_ANY_ACCESS)

/*--------------------------------------------------AAEON EAPI PWM Function-*/
#define IOCTL_AAEON_PWM_GET_VALUE	CTL_CODE\
		(FILE_DEVICE_AAEON, AAEON_FUNC_PWM + 0x00, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_AAEON_PWM_SET_VALUE	CTL_CODE\
		(FILE_DEVICE_AAEON, AAEON_FUNC_PWM + 0x01, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_AAEON_PWM_GetInfo		CTL_CODE\
		(FILE_DEVICE_AAEON, AAEON_FUNC_PWM + 0x02, METHOD_BUFFERED, FILE_ANY_ACCESS)
/*--------------------------------------------------AAEON EAPI SPI Function-*/
#define IOCTL_AAEON_SPI_READRAW	CTL_CODE\
		(FILE_DEVICE_AAEON, AAEON_FUNC_SPI + 0x00, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_AAEON_SPI_WRITERAW	CTL_CODE\
		(FILE_DEVICE_AAEON, AAEON_FUNC_SPI + 0x01, METHOD_BUFFERED, FILE_ANY_ACCESS)

/*--------------------------------------------------AAEON EAPI CPLD Function-*/
#define IOCTL_AAEON_CPLD_READWRITE	CTL_CODE\
		(FILE_DEVICE_AAEON, AAEON_FUNC_CPLD + 0x00, METHOD_BUFFERED, FILE_ANY_ACCESS)
/*--------------------------------------------------AAEON EAPI ADC Function-*/
#define IOCTL_AAEON_ADC_ReadValue	CTL_CODE\
		(FILE_DEVICE_AAEON, AAEON_FUNC_ADC + 0x00, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_AAEON_ADC_Info		CTL_CODE\
		(FILE_DEVICE_AAEON, AAEON_FUNC_ADC + 0x01, METHOD_BUFFERED, FILE_ANY_ACCESS)
/*--------------------------------------------------AAEON EAPI WDT Function-*/
#define IOCTL_AAEON_WDT_Start	CTL_CODE\
		(FILE_DEVICE_AAEON, AAEON_FUNC_WDT + 0x00, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_AAEON_WDT_Stop		CTL_CODE\
		(FILE_DEVICE_AAEON, AAEON_FUNC_WDT + 0x01, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_AAEON_WDT_Reload	CTL_CODE\
		(FILE_DEVICE_AAEON, AAEON_FUNC_WDT + 0x02, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_AAEON_WDT_GetTimeout		CTL_CODE\
		(FILE_DEVICE_AAEON, AAEON_FUNC_WDT + 0x03, METHOD_BUFFERED, FILE_ANY_ACCESS)